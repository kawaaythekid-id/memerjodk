-- LocalScript (StarterPlayerScripts)
-- Freeze Visual Script (Client Only, Android Friendly)

local Players = game:GetService("Players")
local UIS = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local Workspace = game:GetService("Workspace")

local player = Players.LocalPlayer
local camera = Workspace.CurrentCamera

-- === GUI ===
local gui = Instance.new("ScreenGui")
gui.ResetOnSpawn = false
gui.Name = "FreezeUI"
gui.Parent = player:WaitForChild("PlayerGui")

local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(0, 140, 0, 48)
toggleBtn.Position = UDim2.new(0.05, 0, 0.75, 0)
toggleBtn.Text = "Freeze: OFF"
toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
toggleBtn.TextColor3 = Color3.new(1, 1, 1)
toggleBtn.Font = Enum.Font.GothamBold
toggleBtn.TextSize = 18
toggleBtn.Parent = gui

local radiusBox = Instance.new("TextBox")
radiusBox.Size = UDim2.new(0, 140, 0, 40)
radiusBox.Position = UDim2.new(0.05, 0, 0.83, 0)
radiusBox.PlaceholderText = "Radius"
radiusBox.Text = "12"
radiusBox.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
radiusBox.TextColor3 = Color3.new(1, 1, 1)
radiusBox.ClearTextOnFocus = false
radiusBox.Font = Enum.Font.Gotham
radiusBox.TextSize = 18
radiusBox.Parent = gui

-- === State ===
local enabled = false
local frozenMap = {} -- originalPart -> clone
local visualsFolder = Instance.new("Folder")
visualsFolder.Name = "ClientFreezeVisuals_" .. player.UserId
visualsFolder.Parent = Workspace

-- Preview sphere
local preview = Instance.new("Part")
preview.Anchored = true
preview.CanCollide = false
preview.Transparency = 0.6
preview.Material = Enum.Material.ForceField
preview.Color = Color3.fromRGB(0, 170, 255)
preview.Shape = Enum.PartType.Ball
preview.Size = Vector3.new(1, 1, 1)
preview.Parent = visualsFolder
preview.Visible = false

local lastWorldPos = nil

-- === Helpers ===
local function parseRadius()
	local r = tonumber(radiusBox.Text) or 12
	return math.clamp(r, 2, 100)
end

local function setEnabled(state)
	enabled = state
	if enabled then
		toggleBtn.Text = "Freeze: ON"
		toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 170, 255)
	else
		toggleBtn.Text = "Freeze: OFF"
		toggleBtn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		preview.Visible = false
	end
end

toggleBtn.MouseButton1Click:Connect(function()
	setEnabled(not enabled)
end)

radiusBox.FocusLost:Connect(function()
	radiusBox.Text = tostring(parseRadius())
end)

local function screenRaycast(screenPos)
	local r = camera:ViewportPointToRay(screenPos.X, screenPos.Y)
	local rayParams = RaycastParams.new()
	rayParams.FilterType = Enum.RaycastFilterType.Exclude
	rayParams.FilterDescendantsInstances = { player.Character, visualsFolder }
	local res = Workspace:Raycast(r.Origin, r.Direction * 500, rayParams)
	if res then
		return res.Position
	end
	return nil
end

local function getPartsInRadius(center, radius)
	local overlap = OverlapParams.new()
	overlap.FilterType = Enum.RaycastFilterType.Exclude
	overlap.FilterDescendantsInstances = { player.Character, visualsFolder }
	return Workspace:GetPartBoundsInRadius(center, radius, overlap)
end

local function isCharacterPart(part)
	local model = part:FindFirstAncestorOfClass("Model")
	return model and model:FindFirstChildOfClass("Humanoid") ~= nil
end

-- Freeze Visual
local function freezePart(p)
	if frozenMap[p] or not p:IsA("BasePart") then return end
	if isCharacterPart(p) then return end

	-- sembunyikan asli
	p.LocalTransparencyModifier = 1

	-- clone visual
	local c = p:Clone()
	c.Anchored = true
	c.CanCollide = false
	c.Material = Enum.Material.Neon
	c.Color = Color3.fromRGB(0, 255, 255)
	c.Parent = visualsFolder

	c.CFrame = p.CFrame
	c.Size = p.Size

	frozenMap[p] = c
end

local function unfreezePart(p)
	local c = frozenMap[p]
	if c then
		if p:IsA("BasePart") then
			p.LocalTransparencyModifier = 0
		end
		c:Destroy()
		frozenMap[p] = nil
	end
end

local function toggleFreezeAt(pos, radius)
	for _, part in ipairs(getPartsInRadius(pos, radius)) do
		if part:IsA("BasePart") and not isCharacterPart(part) then
			if frozenMap[part] then
				unfreezePart(part)
			else
				freezePart(part)
			end
		end
	end
end

-- === Input (Android + Desktop) ===
if UIS.TouchEnabled then
	-- Preview saat drag
	UIS.TouchMoved:Connect(function(touch)
		if not enabled or UIS:GetFocusedTextBox() then return end
		local pos3d = screenRaycast(touch.Position)
		if pos3d then
			lastWorldPos = pos3d
			local r = parseRadius()
			preview.Size = Vector3.new(r*2, r*2, r*2)
			preview.CFrame = CFrame.new(pos3d)
			preview.Visible = true
		else
			preview.Visible = false
		end
	end)

	-- Freeze saat lepas jari
	UIS.TouchEnded:Connect(function()
		if enabled and lastWorldPos then
			toggleFreezeAt(lastWorldPos, parseRadius())
		end
	end)
else
	-- PC fallback
	RunService.RenderStepped:Connect(function()
		if not enabled then
			preview.Visible = false
			return
		end
		local mouse = player:GetMouse()
		local pos3d = screenRaycast(Vector2.new(mouse.X, mouse.Y))
		if pos3d then
			lastWorldPos = pos3d
			local r = parseRadius()
			preview.Size = Vector3.new(r*2, r*2, r*2)
			preview.CFrame = CFrame.new(pos3d)
			preview.Visible = true
		else
			preview.Visible = false
		end
	end)

	player:GetMouse().Button1Down:Connect(function()
		if enabled and lastWorldPos then
			toggleFreezeAt(lastWorldPos, parseRadius())
		end
	end)
end

-- Default OFF
setEnabled(false)
