-- LocalScript (StarterPlayer > StarterPlayerScripts)
local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")

local player = Players.LocalPlayer
local targetPlayer = nil
local enabled = false
local followConn
local positionMode = "Back"
local distance = 4 -- default jarak

-- === GUI ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "StandFollowMobile"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 160, 0, 180)
frame.Position = UDim2.new(1, -170, 0, 50)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Draggable = true
frame.Parent = screenGui

local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -30, 0, 25)
title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
title.Text = "Stand"
title.TextColor3 = Color3.fromRGB(255, 255, 255)
title.Font = Enum.Font.SourceSansBold
title.TextSize = 16
title.Parent = frame

-- Minimize button
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 25, 0, 25)
minimizeBtn.Position = UDim2.new(1, -25, 0, 0)
minimizeBtn.Text = "-"
minimizeBtn.BackgroundColor3 = Color3.fromRGB(100,100,100)
minimizeBtn.TextColor3 = Color3.fromRGB(255,255,255)
minimizeBtn.Parent = frame

local content = Instance.new("Frame")
content.Size = UDim2.new(1, 0, 1, -25)
content.Position = UDim2.new(0,0,0,25)
content.BackgroundTransparency = 1
content.Parent = frame

local minimized = false
minimizeBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	content.Visible = not minimized
	minimizeBtn.Text = minimized and "+" or "-"
end)

-- pilih player
local playerDropdown = Instance.new("TextButton")
playerDropdown.Size = UDim2.new(1, -10, 0, 25)
playerDropdown.Position = UDim2.new(0, 5, 0, 5)
playerDropdown.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
playerDropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
playerDropdown.Text = "Pilih Player"
playerDropdown.Parent = content

-- daftar player popup
local dropdownFrame = Instance.new("ScrollingFrame")
dropdownFrame.Size = UDim2.new(1, -10, 0, 70)
dropdownFrame.Position = UDim2.new(0, 5, 0, 35)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
dropdownFrame.Visible = false
dropdownFrame.BorderSizePixel = 0
dropdownFrame.CanvasSize = UDim2.new(0,0,0,0)
dropdownFrame.ScrollBarThickness = 6
dropdownFrame.Parent = content

local uiList = Instance.new("UIListLayout")
uiList.Parent = dropdownFrame
uiList.SortOrder = Enum.SortOrder.LayoutOrder

-- tombol posisi (1 baris kecil)
local posRow = Instance.new("Frame")
posRow.Size = UDim2.new(1, -10, 0, 25)
posRow.Position = UDim2.new(0,5,0,110)
posRow.BackgroundTransparency = 1
posRow.Parent = content

local modes = {"F","B","L","R"}
local fullNames = {F="Front",B="Back",L="Left",R="Right"}
local modeButtons = {}
for i, name in ipairs(modes) do
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0.25, -2, 1, 0)
	btn.Position = UDim2.new((i-1)*0.25, (i-1)*2, 0, 0)
	btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.Text = name
	btn.Parent = posRow
	modeButtons[name] = btn

	btn.MouseButton1Click:Connect(function()
		positionMode = fullNames[name]
		for _, b in pairs(modeButtons) do
			b.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		end
		btn.BackgroundColor3 = Color3.fromRGB(0, 120, 200)
	end)
end
modeButtons["B"].BackgroundColor3 = Color3.fromRGB(0,120,200)

-- slider jarak
local sliderFrame = Instance.new("Frame")
sliderFrame.Size = UDim2.new(1, -10, 0, 15)
sliderFrame.Position = UDim2.new(0,5,0,85)
sliderFrame.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
sliderFrame.Parent = content

local sliderBar = Instance.new("Frame")
sliderBar.Size = UDim2.new(0.4, 0, 1, 0)
sliderBar.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
sliderBar.Parent = sliderFrame

local sliderLabel = Instance.new("TextLabel")
sliderLabel.Size = UDim2.new(1, 0, 1, 0)
sliderLabel.BackgroundTransparency = 1
sliderLabel.Text = "4"
sliderLabel.TextColor3 = Color3.fromRGB(255,255,255)
sliderLabel.Font = Enum.Font.SourceSansBold
sliderLabel.TextSize = 12
sliderLabel.Parent = sliderFrame

local dragging = false
local function updateSlider(inputX)
	local relative = math.clamp((inputX - sliderFrame.AbsolutePosition.X) / sliderFrame.AbsoluteSize.X, 0, 1)
	distance = math.floor(relative * 100) / 10
	sliderBar.Size = UDim2.new(relative, 0, 1, 0)
	sliderLabel.Text = tostring(distance)
end

sliderFrame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = true
		updateSlider(input.Position.X)
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if dragging and input.UserInputType == Enum.UserInputType.MouseMovement then
		updateSlider(input.Position.X)
	end
end)
UserInputService.InputEnded:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 then
		dragging = false
	end
end)

-- toggle
local toggleBtn = Instance.new("TextButton")
toggleBtn.Size = UDim2.new(1, -10, 0, 25)
toggleBtn.Position = UDim2.new(0,5,1,-30)
toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 200)
toggleBtn.TextColor3 = Color3.fromRGB(255, 255, 255)
toggleBtn.Text = "OFF"
toggleBtn.Parent = content

-- === LOGIC ===
local function getCharParts(character)
	if not character then return end
	local hrp = character:FindFirstChild("HumanoidRootPart")
	local humanoid = character:FindFirstChildOfClass("Humanoid")
	return humanoid, hrp
end

local function followTarget()
	if followConn then followConn:Disconnect() end
	followConn = RunService.RenderStepped:Connect(function()
		if not targetPlayer or not targetPlayer.Character then return end
		local _, targetHRP = getCharParts(targetPlayer.Character)
		local myChar = player.Character
		local _, myHRP = getCharParts(myChar)

		if targetHRP and myHRP then
			local offset = Vector3.new()
			if positionMode == "Back" then
				offset = Vector3.new(0, 0, distance)
			elseif positionMode == "Front" then
				offset = Vector3.new(0, 0, -distance)
			elseif positionMode == "Right" then
				offset = Vector3.new(distance, 0, 0)
			elseif positionMode == "Left" then
				offset = Vector3.new(-distance, 0, 0)
			end
			local targetPos = (targetHRP.CFrame * CFrame.new(offset)).Position
			myChar:MoveTo(targetPos) -- biar tidak getar
		end
	end)
end

local function stopFollow()
	if followConn then
		followConn:Disconnect()
		followConn = nil
	end
end

local function toggle()
	enabled = not enabled
	if enabled then
		if targetPlayer then
			followTarget()
			toggleBtn.Text = "ON"
			toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
		else
			enabled = false
			toggleBtn.Text = "OFF"
		end
	else
		stopFollow()
		toggleBtn.Text = "OFF"
		toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 200)
	end
end
toggleBtn.MouseButton1Click:Connect(toggle)

-- === Dropdown logic ===
local function refreshDropdown()
	for _, child in ipairs(dropdownFrame:GetChildren()) do
		if child:IsA("TextButton") then child:Destroy() end
	end
	for _, plr in pairs(Players:GetPlayers()) do
		if plr ~= player then
			local btn = Instance.new("TextButton")
			btn.Size = UDim2.new(1, -5, 0, 20)
			btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
			btn.TextColor3 = Color3.fromRGB(255, 255, 255)
			btn.Text = plr.Name
			btn.Parent = dropdownFrame
			btn.MouseButton1Click:Connect(function()
				targetPlayer = plr
				playerDropdown.Text = plr.Name
				dropdownFrame.Visible = false
				if enabled then followTarget() end
			end)
		end
	end
	dropdownFrame.CanvasSize = UDim2.new(0,0,0,uiList.AbsoluteContentSize.Y)
end

playerDropdown.MouseButton1Click:Connect(function()
	dropdownFrame.Visible = not dropdownFrame.Visible
	if dropdownFrame.Visible then refreshDropdown() end
end)

Players.PlayerAdded:Connect(refreshDropdown)
Players.PlayerRemoving:Connect(function(rem)
	if targetPlayer == rem then
		targetPlayer = nil
		playerDropdown.Text = "Pilih Player"
	end
	refreshDropdown()
end)
