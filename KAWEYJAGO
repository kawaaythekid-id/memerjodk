-- LocalScript (StarterPlayer > StarterPlayerScripts)
-- Gabungan Follow/Teleport + Magnet Coin Android
-- by ChatGPT

local Players = game:GetService("Players")
local RunService = game:GetService("RunService")
local UserInputService = game:GetService("UserInputService")
local TweenService = game:GetService("TweenService")
local CollectionService = game:GetService("CollectionService")

local player = Players.LocalPlayer
local targetPlayer = nil
local enabled = false
local followConn
local positionMode = "Back"
local distance = 0
local autoTeleporting = false

-- Magnet settings
local magnetEnabled = false
local activeTweens = {}
local MAX_RADIUS = 9999
local SPEED = 100
local TWEEN_MIN = 0.05
local renderConn

-- === GUI ===
local screenGui = Instance.new("ScreenGui")
screenGui.Name = "StandFollowMobile"
screenGui.ResetOnSpawn = false
screenGui.Parent = player:WaitForChild("PlayerGui")

local frame = Instance.new("Frame")
frame.Size = UDim2.new(0, 250, 0, 320)
frame.Position = UDim2.new(1, -260, 0, 80)
frame.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
frame.BorderSizePixel = 0
frame.Active = true
frame.Parent = screenGui

-- Drag support Android
local dragging, dragInput, dragStart, startPos
local function update(input)
	local delta = input.Position - dragStart
	frame.Position = UDim2.new(
		startPos.X.Scale,
		startPos.X.Offset + delta.X,
		startPos.Y.Scale,
		startPos.Y.Offset + delta.Y
	)
end
frame.InputBegan:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
		dragging = true
		dragStart = input.Position
		startPos = frame.Position
		input.Changed:Connect(function()
			if input.UserInputState == Enum.UserInputState.End then dragging = false end
		end)
	end
end)
frame.InputChanged:Connect(function(input)
	if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
		dragInput = input
	end
end)
UserInputService.InputChanged:Connect(function(input)
	if input == dragInput and dragging then update(input) end
end)

-- Title
local title = Instance.new("TextLabel")
title.Size = UDim2.new(1, -40, 0, 35)
title.BackgroundColor3 = Color3.fromRGB(50, 50, 50)
title.Text = "kaweydlsra"
title.TextColor3 = Color3.fromRGB(255, 0, 0) -- merah
title.Font = Enum.Font.SourceSansBold
title.TextSize = 20
title.Parent = frame

-- Minimize button
local minimizeBtn = Instance.new("TextButton")
minimizeBtn.Size = UDim2.new(0, 35, 0, 35)
minimizeBtn.Position = UDim2.new(1, -35, 0, 0)
minimizeBtn.Text = "-"
minimizeBtn.BackgroundColor3 = Color3.fromRGB(100,100,100)
minimizeBtn.TextColor3 = Color3.fromRGB(255,255,255)
minimizeBtn.Parent = frame

local content = Instance.new("Frame")
content.Size = UDim2.new(1, 0, 1, -35)
content.Position = UDim2.new(0,0,0,35)
content.BackgroundTransparency = 1
content.Parent = frame

local minimized = false
local normalSize = frame.Size
minimizeBtn.MouseButton1Click:Connect(function()
	minimized = not minimized
	content.Visible = not minimized
	frame.Size = minimized and UDim2.new(0,250,0,35) or normalSize
	minimizeBtn.Text = minimized and "+" or "-"
end)

-- Dropdown player
local playerDropdown = Instance.new("TextButton")
playerDropdown.Size = UDim2.new(1, -20, 0, 35)
playerDropdown.Position = UDim2.new(0, 10, 0, 10)
playerDropdown.BackgroundColor3 = Color3.fromRGB(70, 70, 70)
playerDropdown.TextColor3 = Color3.fromRGB(255, 255, 255)
playerDropdown.Text = "Pilih Player"
playerDropdown.TextSize = 18
playerDropdown.Parent = content

local dropdownFrame = Instance.new("ScrollingFrame")
dropdownFrame.Size = UDim2.new(1, -20, 0, 100)
dropdownFrame.Position = UDim2.new(0, 10, 0, 50)
dropdownFrame.BackgroundColor3 = Color3.fromRGB(40, 40, 40)
dropdownFrame.Visible = false
dropdownFrame.BorderSizePixel = 0
dropdownFrame.CanvasSize = UDim2.new(0,0,0,0)
dropdownFrame.ScrollBarThickness = 8
dropdownFrame.Parent = content

local uiList = Instance.new("UIListLayout")
uiList.Parent = dropdownFrame
uiList.SortOrder = Enum.SortOrder.LayoutOrder
uiList.Padding = UDim.new(0,2)

-- Posisi tombol arah
local posRow = Instance.new("Frame")
posRow.Size = UDim2.new(1, -20, 0, 40)
posRow.Position = UDim2.new(0,10,0,160)
posRow.BackgroundTransparency = 1
posRow.Parent = content

local modes = {"F","B","L","R"}
local fullNames = {F="Front",B="Back",L="Left",R="Right"}
local modeButtons = {}
for i, name in ipairs(modes) do
	local btn = Instance.new("TextButton")
	btn.Size = UDim2.new(0.25, -3, 1, 0)
	btn.Position = UDim2.new((i-1)*0.25, (i-1)*3, 0, 0)
	btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
	btn.TextColor3 = Color3.fromRGB(255, 255, 255)
	btn.TextSize = 18
	btn.Text = name
	btn.Parent = posRow
	modeButtons[name] = btn

	btn.MouseButton1Click:Connect(function()
		positionMode = fullNames[name]
		for _, b in pairs(modeButtons) do b.BackgroundColor3 = Color3.fromRGB(60,60,60) end
		btn.BackgroundColor3 = Color3.fromRGB(0, 120, 200)
	end)
end
modeButtons["B"].BackgroundColor3 = Color3.fromRGB(0,120,200)

-- TextBox jarak (hijau)
local distBox = Instance.new("TextBox")
distBox.Size = UDim2.new(1, -20, 0, 35)
distBox.Position = UDim2.new(0, 10, 0, 120)
distBox.BackgroundColor3 = Color3.fromRGB(0, 120, 0)
distBox.TextColor3 = Color3.fromRGB(255,255,255)
distBox.Text = tostring(distance)
distBox.ClearTextOnFocus = false
distBox.PlaceholderText = "Jarak (0-25)"
distBox.TextSize = 18
distBox.Parent = content

distBox.FocusLost:Connect(function()
	local val = tonumber(distBox.Text)
	if val then
		distance = math.clamp(val, 0, 25)
		distBox.Text = tostring(distance)
	else
		distBox.Text = tostring(distance)
	end
end)

-- === Tombol sejajar ===
local buttonFrame = Instance.new("Frame", content)
buttonFrame.Size = UDim2.new(1, -20, 0, 30)
buttonFrame.Position = UDim2.new(0, 10, 1, -80)
buttonFrame.BackgroundTransparency = 1

local buttonLayout = Instance.new("UIListLayout", buttonFrame)
buttonLayout.FillDirection = Enum.FillDirection.Horizontal
buttonLayout.HorizontalAlignment = Enum.HorizontalAlignment.Center
buttonLayout.VerticalAlignment = Enum.VerticalAlignment.Center
buttonLayout.Padding = UDim.new(0, 5)

local function makeButton(text, color)
	local btn = Instance.new("TextButton", buttonFrame)
	btn.Size = UDim2.new(0, 70, 0, 30)
	btn.BackgroundColor3 = color
	btn.TextColor3 = Color3.fromRGB(255,255,255)
	btn.TextSize = 14
	btn.Text = text
	return btn
end

local toggleBtn = makeButton("OFF", Color3.fromRGB(0,120,200))
local autoBtn   = makeButton("Auto ALL", Color3.fromRGB(200,120,0))
local stopBtn   = makeButton("STOP", Color3.fromRGB(200,0,0))

-- Tombol Magnet
local magnetBtn = Instance.new("TextButton", content)
magnetBtn.Size = UDim2.new(1, -20, 0, 35)
magnetBtn.Position = UDim2.new(0, 10, 1, -40)
magnetBtn.BackgroundColor3 = Color3.fromRGB(200,0,200)
magnetBtn.TextColor3 = Color3.new(1,1,1)
magnetBtn.TextSize = 16
magnetBtn.Text = "Magnet OFF"

-- === LOGIC ===
local function getHRP(character)
	if not character then return end
	return character:FindFirstChild("HumanoidRootPart")
end

local function followTarget()
	if followConn then followConn:Disconnect() end
	followConn = RunService.RenderStepped:Connect(function()
		if not targetPlayer or not targetPlayer.Character then return end
		local targetHRP = getHRP(targetPlayer.Character)
		local myHRP = getHRP(player.Character)

		if targetHRP and myHRP then
			local offset = Vector3.new()
			if positionMode == "Back" then offset = Vector3.new(0, 0, distance)
			elseif positionMode == "Front" then offset = Vector3.new(0, 0, -distance)
			elseif positionMode == "Right" then offset = Vector3.new(distance, 0, 0)
			elseif positionMode == "Left" then offset = Vector3.new(-distance, 0, 0) end

			local targetPos = targetHRP.CFrame * CFrame.new(offset)
			myHRP.CFrame = targetPos
		end
	end)
end

local function stopFollow()
	if followConn then followConn:Disconnect() followConn = nil end
end

local function toggle()
	enabled = not enabled
	if enabled then
		if targetPlayer then
			followTarget()
			toggleBtn.Text = "ON"
			toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 200, 100)
		else
			enabled = false
			toggleBtn.Text = "OFF"
		end
	else
		stopFollow()
		toggleBtn.Text = "OFF"
		toggleBtn.BackgroundColor3 = Color3.fromRGB(0, 120, 200)
	end
end
toggleBtn.MouseButton1Click:Connect(toggle)

-- Auto teleport semua player
autoBtn.MouseButton1Click:Connect(function()
	if autoTeleporting then return end
	autoTeleporting = true
	local myHRP = getHRP(player.Character)
	if not myHRP then return end
	for _, plr in ipairs(Players:GetPlayers()) do
		if plr ~= player then
			local hrp = getHRP(plr.Character)
			if hrp then
				myHRP.CFrame = hrp.CFrame * CFrame.new(0, 0, 3)
				task.wait(0.3)
			end
		end
	end
	autoTeleporting = false
end)

-- STOP
stopBtn.MouseButton1Click:Connect(function()
	stopFollow()
	enabled = false
	autoTeleporting = false
	toggleBtn.Text = "OFF"
	toggleBtn.BackgroundColor3 = Color3.fromRGB(0,120,200)
end)

-- Dropdown
local function refreshDropdown()
	for _, child in ipairs(dropdownFrame:GetChildren()) do
		if child:IsA("TextButton") then child:Destroy() end
	end
	local playerList = {}
	for _, plr in pairs(Players:GetPlayers()) do if plr ~= player then table.insert(playerList, plr) end end
	table.sort(playerList, function(a,b) return a.DisplayName:lower() < b.DisplayName:lower() end)
	for _, plr in ipairs(playerList) do
		local btn = Instance.new("TextButton")
		btn.Size = UDim2.new(1, -5, 0, 30)
		btn.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
		btn.TextColor3 = Color3.fromRGB(255, 255, 255)
		btn.TextSize = 16
		btn.Text = plr.DisplayName
		btn.Parent = dropdownFrame
		btn.MouseButton1Click:Connect(function()
			targetPlayer = plr
			playerDropdown.Text = plr.DisplayName
			dropdownFrame.Visible = false
			if enabled then followTarget() end
		end)
	end
	local count = #playerList
	if not targetPlayer then
		if count > 0 then playerDropdown.Text = "Pilih Player ("..tostring(count)..")"
		else playerDropdown.Text = "Pilih Player" end
	end
	dropdownFrame.CanvasSize = UDim2.new(0,0,0,uiList.AbsoluteContentSize.Y)
end
playerDropdown.MouseButton1Click:Connect(function()
	dropdownFrame.Visible = not dropdownFrame.Visible
	if dropdownFrame.Visible then refreshDropdown() end
end)
task.spawn(function() while task.wait(5) do refreshDropdown() end end)
Players.PlayerAdded:Connect(refreshDropdown)
Players.PlayerRemoving:Connect(function(rem)
	if targetPlayer == rem then targetPlayer = nil playerDropdown.Text = "Pilih Player" end
	refreshDropdown()
end)

-- === Magnet Logic ===
local function findCoins()
	local results = {}
	for _, obj in pairs(CollectionService:GetTagged("Coin")) do
		if obj:IsA("BasePart") then table.insert(results, obj) end
	end
	for _, obj in pairs(workspace:GetDescendants()) do
		if obj:IsA("BasePart") and string.find(string.lower(obj.Name), "coin") then
			table.insert(results, obj)
		end
	end
	return results
end

local function magnetCoin(coin, hrp)
	if not coin or not coin.Parent then return end
	if activeTweens[coin] then return end
	activeTweens[coin] = true
	local distance = (coin.Position - hrp.Position).Magnitude
	local duration = math.max(TWEEN_MIN, distance / SPEED)
	coin.CanCollide = false
	local tween = TweenService:Create(coin, TweenInfo.new(duration, Enum.EasingStyle.Quad), {CFrame = CFrame.new(hrp.Position)})
	tween:Play()
	tween.Completed:Connect(function() activeTweens[coin] = nil end)
end

local function setMagnet(val)
	magnetEnabled = val
	if magnetEnabled then
		magnetBtn.Text = "Magnet ON"
		magnetBtn.BackgroundColor3 = Color3.fromRGB(0,200,200)
		if not renderConn then
			renderConn = RunService.RenderStepped:Connect(function()
				local char = player.Character
				if not char then return end
				local hrp = char:FindFirstChild("HumanoidRootPart")
				if not hrp then return end
				for _, coin in pairs(findCoins()) do
					if (coin.Position - hrp.Position).Magnitude <= MAX_RADIUS then
						magnetCoin(coin, hrp)
					end
				end
			end)
		end
	else
		magnetBtn.Text = "Magnet OFF"
		magnetBtn.BackgroundColor3 = Color3.fromRGB(200,0,200)
		if renderConn then renderConn:Disconnect() renderConn = nil end
		activeTweens = {}
	end
end

magnetBtn.MouseButton1Click:Connect(function()
	setMagnet(not magnetEnabled)
end)
setMagnet(false)
